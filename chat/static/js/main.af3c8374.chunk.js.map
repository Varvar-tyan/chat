{"version":3,"sources":["components/Main/main-styles.js","components/common/Search.jsx","redux/reducers/modeReducer.js","redux/reducers/promiseReducer.js","redux/queries/queries.js","redux/reducers/chatsReducer.js","redux/reducers/messagesReducer.js","redux/reducers/usersReducer.js","redux/reducers/authReducer.js","components/Dialogs/NewChatDialog/new-chat-styles.js","helpers/stringToAvatarColor.js","components/Dialogs/NewChatDialog/User.jsx","redux/saga/searchSaga.js","components/Dialogs/NewChatDialog/NewChatDialogContent.jsx","components/Dialogs/NewChatDialog/NewChatDialog.jsx","helpers/refactorTime.js","components/common/Dropzone.jsx","components/Dialogs/MyProfileDialog/MyProfileDialogContent.jsx","components/Dialogs/MyProfileDialog/MyProfileDialog.jsx","components/Main/DialogsWindow/DialogsHeader/MainMenu.jsx","components/Main/DialogsWindow/DialogsHeader/DialogsHeader.jsx","components/Main/DialogsWindow/DialogsList/dialogs-list-styles.js","components/Main/DialogsWindow/DialogsList/Dialog.jsx","components/Main/DialogsWindow/DialogsList/DialogsList.jsx","components/Main/DialogsWindow/DialogsWindow.jsx","components/Main/MessagesWindow/MessagesHeader/ChatTitle.jsx","components/Main/MessagesWindow/MessagesHeader/ChatMenu.jsx","components/Main/MessagesWindow/MessagesHeader/MessagesHeader.jsx","components/Main/MessagesWindow/MessagesList/messages-list-styles.js","images/back_satan.jpg","images/back_dooml.jpg","components/Main/MessagesWindow/MessagesList/MessagesList.jsx","components/Main/MessagesWindow/MessagesWindow.jsx","components/Main/Placeholder/placeholder-styles.js","components/Main/Placeholder/Placeholder.jsx","components/Main/Main.jsx","components/Login/Login.jsx","components/SignUp/SignUp.jsx","redux/store.js","App.js","index.js"],"names":["styles","container","height","burgerIcon","mr","dotsIcon","ml","flexGrow","justifyContent","gridContainer","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","pointerEvents","display","alignItems","size","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","url","pendingAC","name","type","status","resolvedAC","payload","rejectedAC","error","promiseTHC","promise","dispatch","a","promiseUploadFile","file","formData","FormData","append","fetch","method","headers","localStorage","authToken","Authorization","body","then","resp","json","uploadFile","chatGQL","query","variables","JSON","stringify","data","Error","errors","Object","keys","promiseLoginTHC","login","password","promiseRegisterTHC","UserUpsert","promiseGetUsersTHC","skip","UserFind","promiseGetChatsTHC","myId","ChatFind","id","sort","lastModified","promiseChatByIdTHC","ChatFindOne","chatId","_id","promiseGetChatMessagesTHC","MessageFind","promiseChangeAvatarTHC","avatarId","setChatsAC","chats","setChatAC","chat","setChatsTHC","setChatTHC","currentChat","setMessagesAC","messages","setMessagesTHC","setUsersAC","users","setMyProfileAC","myProfile","setUsersSkipAC","loadMoreUsersAC","setMyProfileTHC","UserFindOne","jwt_decode","jwt","split","parse","atob","loginAC","loginTHC","usersListContainer","overflowY","marginBottom","boxShadow","webkitBoxShadow","stringToColor","string","i","hash","length","charCodeAt","toString","substr","stringAvatar","sx","bgcolor","children","User","props","ListItemButton","divider","selected","selectedIndex","onClick","handleListItemClick","Box","avatar","Avatar","srcSet","Typography","component","gutterBottom","searchChatsWorker","searchChatsCheck","searchUsersWorker","searchUsersCheck","delay","ms","Promise","ok","setTimeout","text","put","select","state","auth","sub","title","takeLatest","connect","usersSkip","totalUsersCount","setUsers","searchUsers","loadUsers","setTotalUsers","UserCount","usersCount","count","useState","searchRequest","setSearchRequest","listInnerRef","useRef","useEffect","TextField","label","variant","mb","value","onChange","e","setTitle","target","placeholder","inputProps","onScroll","current","scrollTop","scrollHeight","clientHeight","console","log","ref","List","disablePadding","filter","user","map","memberId","index","setMemberId","createNewChat","ChatUpsert","members","setChats","setChat","onClose","open","history","useHistory","handleCloseClick","handleDoneClick","result","push","maxWidth","fullWidth","DialogTitle","IconButton","Divider","DialogContent","DialogActions","disabled","refactorTime","timestamp","date","Date","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","handleDrop","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","style","cursor","setMyProfile","overflow","src","Chip","Accordion","disableGutters","square","AccordionSummary","py","fontSize","lineHeight","AccordionDetails","pl","ListItem","ListItemIcon","ListItemText","createdAt","MyProfileDialog","isDarkMode","mode","setMode","logout","anchorEl","handleClose","openNewChatDialog","setOpenNewChatDialog","openMyProfileDialog","setOpenMyProfileDialog","MenuListProps","MenuItem","Switch","checked","searchChats","setAnchorEl","Boolean","AppBar","Toolbar","edge","event","currentTarget","dialogsListContainer","maxHeight","dialogItemContainer","dialogItemInfoContainer","dialogItemInfo","messageWrapper","message","setMessages","lastMessage","setLastMessage","messagesResult","Link","to","noWrap","Badge","badgeContent","location","pathname","slice","setSelectedIndex","DialogsWindow","Grid","item","xs","md","ChatTitle","ChatMenu","anchorOrigin","vertical","horizontal","transformOrigin","MessagesHeader","messageWindowMessagesContainer","flexDirection","backgroundPosition","backgroundSize","backgroundRepeat","messageYou","messageCompanion","messageBubbleYou","px","pb","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","messageBubbleCompanion","borderBottomRightRadius","dateCaption","fontWeight","alignSelf","messageInputCont","pt","sendIcon","attachIcon","messageInput","Message","owner","addMessage","MessageUpsert","messageText","setMessageText","handleSendClick","backgroundImage","imageDark","imageDoom","textAlign","multiline","maxRows","match","params","placeholderContainer","darkTheme","createTheme","background","messageDark","messageColor","lightTheme","ThemeProvider","CssBaseline","Container","path","exact","Placeholder","MessagesWindow","onLogin","setLogin","setPassword","marginTop","m","onSubmit","preventDefault","mt","margin","required","autoComplete","autoFocus","Button","href","onSignUp","verifiedPassword","setVerifiedPassword","helperText","rootSaga","reducers","combineReducers","action","undefined","token","isLoggedIn","sagaMiddleware","createSagaMiddleware","middlewares","thunkMiddleware","store","createStore","applyMiddleware","all","subscribe","getState","run","AppContainer","render","Main","Login","SignUp","mainApp","createHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af3c8374.chunk.js","sourcesContent":["const styles = {\r\n    container: {\r\n        height: '100vh',\r\n    },\r\n    burgerIcon: {\r\n        mr: 2\r\n    },\r\n    dotsIcon: {\r\n        ml: 2,\r\n        flexGrow: 2,\r\n        justifyContent: 'flex-end'\r\n    },\r\n    gridContainer: {\r\n        height: '98%',\r\n    }\r\n}\r\n\r\nexport default styles;","import { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(0.5),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: 0,\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 0.5, 0, 1.5),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    size: 'large'\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(0.8, 0.5, 0.8, 0.5),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n}));\r\n","export function modeReducer(state, action={}) {\r\n    if (state === undefined){\r\n        if (localStorage.mode) {\r\n            action.isDarkMode = localStorage.mode === 'dark'\r\n            return {isDarkMode: action.isDarkMode}\r\n        }\r\n        return {isDarkMode: false}\r\n    }\r\n    if (action.type === 'SET_DARK_MODE') {\r\n        localStorage.mode = action.isDarkMode ? 'dark' : 'light'\r\n        return {isDarkMode: action.isDarkMode}\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setDarkModeAC = (isDarkMode) => ({type: 'SET_DARK_MODE', isDarkMode})","export function promiseReducer(state={}, action) {\r\n    if (action.type === 'PROMISE') {\r\n        return {\r\n            ...state,\r\n            [action.name]:{status: action.status, payload: action.payload, error: action.error}\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nconst pendingAC = name => ({type: 'PROMISE', status: 'PENDING', name})\r\nconst resolvedAC = (name, payload) => ({type: 'PROMISE', status: 'RESOLVED', name, payload})\r\nconst rejectedAC = (name, error) => ({type: 'PROMISE', status: 'REJECTED', name, error})\r\n\r\nexport const promiseTHC = (name, promise) => {\r\n    return async (dispatch) => {\r\n        dispatch(pendingAC(name))\r\n        try {\r\n            let payload = await promise\r\n            dispatch(resolvedAC(name, payload))\r\n            return payload\r\n        }\r\n        catch(error){\r\n            dispatch(rejectedAC(name, error))\r\n        }\r\n    }\r\n}\r\n","import { promiseTHC } from \"../reducers/promiseReducer\"\r\n\r\nconst uploadFile = file => {\r\n  let formData = new FormData()\r\n  formData.append('media', file)\r\n  return fetch('http://chat.fs.a-level.com.ua/upload', {\r\n    method: 'POST',\r\n    headers: localStorage.authToken ? { Authorization: 'Bearer ' + localStorage.authToken } : {},\r\n    body: formData\r\n  }).then(resp => resp.json())\r\n}\r\n\r\nexport const promiseUploadFile = (file) => {\r\n  return promiseTHC('photo', uploadFile(file))\r\n}\r\n\r\nconst getGQL = url => {\r\n  return function (query, variables = {}) {\r\n      return fetch(url,\r\n          {\r\n              method: \"POST\",\r\n              headers:\r\n              {\r\n                  \"Content-Type\": \"application/json\",\r\n                  ...(localStorage.authToken ? { Authorization: 'Bearer ' + localStorage.authToken } : {})\r\n              },\r\n              body: JSON.stringify({ query, variables })\r\n          }).then(resp => resp.json())\r\n          .then(data => {\r\n              if (\"errors\" in data) {\r\n                  throw new Error(JSON.stringify(data.errors, null, 4))\r\n              }\r\n              else {\r\n                  return data.data[Object.keys(variables)[0]]\r\n              }\r\n          })\r\n  }\r\n}\r\n\r\nexport const chatGQL = getGQL('http://chat.fs.a-level.com.ua/graphql')\r\n\r\nexport const promiseLoginTHC = (login, password) => {\r\n    return promiseTHC('login', chatGQL(`\r\n        query login($login:String, $password: String) \r\n        {login(login:$login, password:$password)}`,\r\n        { login, password }))\r\n}\r\n\r\nexport const promiseRegisterTHC = (login, password) => {\r\n    return promiseTHC('register', chatGQL(`mutation register($login:String, $password:String) {\r\n        UserUpsert(user:{\r\n          login:$login, password:$password\r\n        })\r\n        {_id login}\r\n      }`,\r\n        { UserUpsert: '', login, password }))\r\n}\r\n\r\nexport const promiseGetUsersTHC = (skip) => {\r\n    return promiseTHC('users', chatGQL(`query findUsers($query:String){\r\n        UserFind(query: $query){\r\n          _id login nick avatar {\r\n            _id url\r\n          }\r\n        }\r\n      }`,\r\n      {UserFind: '', query: JSON.stringify([{ }, {skip: [skip]}])}))\r\n}\r\n\r\nexport const promiseNewChatTHC = (title, _id) => {\r\n  return promiseTHC('newChat', chatGQL(`mutation createChat($title: String, $members:[UserInput]){\r\n        ChatUpsert(chat:{\r\n          title: $title, members:$members\r\n        }) {\r\n          _id createdAt lastModified owner {\r\n            _id login\r\n          } members {\r\n            _id login\r\n          }\r\n        }\r\n      }`, { ChatUpsert: '', title, members: [{ _id }] }))\r\n}\r\n\r\nexport const promiseGetChatsTHC = (myId) => {\r\n  return promiseTHC('myChats', chatGQL(`query findChats($id:String){\r\n    ChatFind(query: $id){\r\n      _id createdAt lastModified title members {_id login} owner {_id login} messages {_id createdAt owner {login} text media {_id url}}\r\n    }\r\n  }`, {ChatFind: '', \r\n  id: JSON.stringify([\r\n    {\"members._id\": myId}, \r\n    {sort: [{lastModified: -1}]}\r\n  ])}))\r\n}\r\n\r\nexport const promiseChatByIdTHC = (id) => {\r\n  return promiseTHC('chat', chatGQL(`query findExactChat($chatId:String){\r\n    ChatFindOne(query: $chatId){\r\n      _id createdAt lastModified owner {_id login} title members {\r\n        _id login\r\n      } messages {_id owner {_id login } text  createdAt forwarded {_id owner {login}}\r\n      }\r\n    }\r\n  }`, {ChatFindOne: '', chatId: JSON.stringify([{_id: id}])}))\r\n}\r\n\r\nexport const promiseGetChatMessagesTHC = (chatId) => {\r\n  return promiseTHC('messages', chatGQL(`query FindMessages($chatId:String){\r\n    MessageFind(query: $chatId){\r\n      _id createdAt owner {_id login} text chat { _id title}\r\n    }\r\n  }`, {MessageFind: '', chatId: JSON.stringify([{\"chat._id\": chatId}])}))\r\n}\r\n\r\nexport const promiseNewMessageTHC = (text, chatId) => {\r\n  return promiseTHC('newMessage', chatGQL(`mutation addMessage($text: String, $chatId: ID){\r\n    MessageUpsert(message:{\r\n      text: $text, chat: {_id: $chatId}\r\n    }){\r\n      _id chat {_id title} text\r\n    }\r\n  }`, { MessageUpsert: '', text, chatId}))\r\n}\r\n\r\nexport const promiseUserByIdTHC = (id) => {\r\n  return promiseTHC('userById', chatGQL(`query findUser($query: String){\r\n    UserFindOne(query: $query){\r\n      _id createdAt login nick avatar {\r\n        _id url\r\n      }\r\n    }\r\n  }`, {UserFindOne: '', query: JSON.stringify([{_id: id}])}))\r\n}\r\n\r\nexport const promiseChangeAvatarTHC = (avatarId, myId) => {\r\n  return promiseTHC('setAvatar', chatGQL(`mutation setAvatar($myId: ID, $avatarId: ID){\r\n    UserUpsert(user:{_id: $myId, avatar: {_id: $avatarId}}){\r\n        _id, avatar{\r\n            _id\r\n        }\r\n      }\r\n    }`, {UserUpsert: '', avatarId, myId}))\r\n}\r\n\r\nexport const promiseGetTotalUsersCount = () => {\r\n  return promiseTHC('totalUsersCount', chatGQL(`query totalUsersCount{\r\n    UserCount(query: \"[{}]\")\r\n  }`, {UserCount: ''}))\r\n}\r\n    ","import { promiseChatByIdTHC, promiseGetChatsTHC} from '../queries/queries';\r\n\r\nexport const chatsReducer = (state={}, action) => {\r\n    if (action.type === 'SET_CHATS') {\r\n        return {\r\n            ...state,\r\n            chats: action.chats\r\n        }\r\n    }\r\n    if (action.type === 'SET_CHAT') {\r\n        return {\r\n            ...state,\r\n            currentChat: action.chat\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setChatsAC = (chats) => ({type: 'SET_CHATS', chats})\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat})\r\n\r\nexport const setChatsTHC = (myId) => {\r\n    return async (dispatch) => {\r\n        let chats = await dispatch(promiseGetChatsTHC(myId))\r\n        if(chats) {\r\n            dispatch(setChatsAC(chats))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setChatTHC = (id) => {\r\n    return async (dispatch) => {\r\n        let currentChat = await dispatch(promiseChatByIdTHC(id))\r\n        if (currentChat) {\r\n            dispatch(setChatAC(currentChat))\r\n        }\r\n    }\r\n}\r\n","import {promiseGetChatMessagesTHC} from '../queries/queries';\r\n\r\nexport const messagesReducer = (state={}, action) => {\r\n    if (action.type === 'SET_MESSAGES') {\r\n        return {\r\n            ...state,\r\n            messages: action.messages\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages})\r\n\r\nexport const setMessagesTHC = (chatId) => {\r\n    return async (dispatch) => {\r\n        let messages = await dispatch(promiseGetChatMessagesTHC(chatId))\r\n        if(messages) {\r\n            return dispatch(setMessagesAC(messages))\r\n        }\r\n    }\r\n}","import { promiseChangeAvatarTHC, promiseGetTotalUsersCount, promiseGetUsersTHC, promiseUploadFile, promiseUserByIdTHC } from \"../queries/queries\"\r\n\r\nexport const usersReducer = (state={usersSkip: 0}, action) => {\r\n    if (action.type === 'SET_USERS') {\r\n        return {\r\n            ...state,\r\n            users: action.users\r\n        }\r\n    }\r\n    if (action.type === 'LOAD_MORE_USERS') {\r\n        return {\r\n            ...state,\r\n            users: [...state.users, ...action.users]\r\n        }\r\n    }\r\n    if (action.type === 'SET_MY_PROFILE') {\r\n        return {\r\n            ...state,\r\n            myProfile: action.myProfile\r\n        }\r\n    }\r\n    if (action.type === 'SET_USERS_SKIP') {\r\n        return {\r\n            ...state,\r\n            usersSkip: action.skip\r\n        }\r\n    }\r\n    if (action.type === 'SET_TOTAL_USERS_COUNT') {\r\n        return {\r\n            ...state,\r\n            totalUsersCount: action.count\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setUsersAC = (users) => ({type: 'SET_USERS', users})\r\nexport const setMyProfileAC = (myProfile) => ({type: 'SET_MY_PROFILE', myProfile})\r\nexport const setUsersSkipAC = (skip) => ({type: 'SET_USERS_SKIP', skip})\r\nexport const setTotalUsersCountAC = (count) => ({type: 'SET_TOTAL_USERS_COUNT', count})\r\nexport const loadMoreUsersAC = (users) => ({type: 'LOAD_MORE_USERS', users})\r\n\r\nexport const setUsersTHC = (skip) => {\r\n    return async (dispatch) => {\r\n        let users = await dispatch(promiseGetUsersTHC(skip))\r\n        if(users) {\r\n            dispatch(setUsersAC(users))\r\n            dispatch(setUsersSkipAC(users.length))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCountTHC = () => {\r\n    return async (dispatch) => {\r\n        let usersCount = await dispatch(promiseGetTotalUsersCount())\r\n        if (usersCount) {\r\n            dispatch(setTotalUsersCountAC(usersCount))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMyProfileTHC = (myId) => {\r\n    return async (dispatch) => {\r\n        let myProfile = await dispatch(promiseUserByIdTHC(myId))\r\n\r\n        if (myProfile) {\r\n            dispatch(setMyProfileAC(myProfile))\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAvatarTHC = (file, myId) => {\r\n    return async (dispatch) => {\r\n      let result = await dispatch(promiseUploadFile(file))\r\n  \r\n      if (result?._id) {\r\n        await dispatch(promiseChangeAvatarTHC(result._id, myId))\r\n        await dispatch(setMyProfileTHC(myId))\r\n      }\r\n    }\r\n}\r\n\r\nexport const loadMoreUsersTHC = (usersSkip) => {\r\n    return async (dispatch) => {\r\n        let users = await dispatch(promiseGetUsersTHC(usersSkip))\r\n\r\n        if (users) {\r\n            dispatch(setUsersSkipAC(+usersSkip + users.length))\r\n            dispatch(loadMoreUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\n","import { promiseLoginTHC, promiseRegisterTHC } from \"../queries/queries\"\r\nimport { setChatAC, setChatsAC } from \"./chatsReducer\"\r\nimport { setMessagesAC } from \"./messagesReducer\"\r\nimport { setMyProfileAC } from \"./usersReducer\"\r\n\r\nconst jwt_decode = (jwt) => {\r\n    let payload = jwt.split('.')\r\n    return JSON.parse(atob(payload[1]))\r\n}\r\n\r\nexport function authReducer(state, action={}) {\r\n    if (state === undefined){\r\n        if (localStorage.authToken) {\r\n            action.jwt = localStorage.authToken\r\n            return {token: action.jwt, payload: jwt_decode(action.jwt), isLoggedIn: true}\r\n        }\r\n        return {}\r\n    }\r\n    if (action.type === 'LOGIN') {\r\n        console.log('ЛОГИН')\r\n        localStorage.authToken = action.jwt\r\n        return {token: action.jwt, payload: jwt_decode(action.jwt), isLoggedIn: true}\r\n    }\r\n    if (action.type === 'LOGOUT') {\r\n        console.log('ЛОГАУТ')\r\n        delete localStorage.authToken\r\n        return {isLoggedIn: false}\r\n    }\r\n    return state\r\n}\r\n\r\nconst loginAC = (jwt) => ({type: 'LOGIN', jwt})\r\nconst logoutAC = () => ({type: 'LOGOUT'})\r\n\r\nexport const loginTHC = (login, password) => {\r\n    return async (dispatch) => {\r\n        let jwt = await dispatch(promiseLoginTHC(login, password))\r\n        if (jwt) {\r\n            dispatch(loginAC(jwt))\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerTHC = (login, password) => {\r\n    return async (dispatch) => {\r\n        let payload = await dispatch(promiseRegisterTHC(login, password))\r\n        if (payload) {\r\n            dispatch(loginTHC(login, password))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutTHC = () => {\r\n    return (dispatch) => {\r\n        dispatch(logoutAC())\r\n        dispatch(setChatsAC(null))\r\n        dispatch(setMyProfileAC(null))\r\n        dispatch(setChatAC(null))\r\n        dispatch(setMessagesAC(null))\r\n    }\r\n}","const styles = {\r\n    usersListContainer: {\r\n        height: '300px',\r\n        overflowY: 'auto',\r\n        marginBottom: '-15px',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em'\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n            webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(255,255,255,.3)',\r\n          }\r\n    }\r\n}\r\n\r\nexport default styles; ","export function stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n}\r\n\r\nexport function stringAvatar(name) {\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n            width: 50,\r\n            height: 50,\r\n            mr: 1.5\r\n        },\r\n        children: `${name.split(' ')[0][0]}`,\r\n    };\r\n}","import { Avatar, Box, ListItemButton, Typography} from '@mui/material';\r\nimport { stringAvatar } from '../../../helpers/stringToAvatarColor';\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <ListItemButton\r\n        divider\r\n        selected={props.selectedIndex === props._id}\r\n        onClick={() => props.handleListItemClick(props._id)}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            {props.avatar ? <Avatar srcSet={'http://chat.fs.a-level.com.ua/' + props.avatar.url} sx={{width: 50, height: 50, mr: 1.5}} /> : <Avatar {...stringAvatar(props.login)} />}\r\n            <Box>\r\n                <Typography component=\"span\" gutterBottom>{props.login}</Typography>\r\n            </Box>\r\n        </Box>\r\n    </ListItemButton>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import { takeLatest, put, select } from 'redux-saga/effects';\r\nimport { chatGQL } from '../queries/queries';\r\nimport { setChatsAC } from '../reducers/chatsReducer';\r\nimport { setUsersAC } from '../reducers/usersReducer';\r\n\r\nconst delay = ms => new Promise(ok => setTimeout(() => ok(ms), ms))\r\n\r\nexport const actionSearchChats = text => ({type: 'SEARCH_CHATS', text})\r\n\r\nfunction* searchChatsWorker({text}){\r\n    yield put(setChatsAC(null))\r\n    yield delay(1500) \r\n    let payload = yield chatGQL(`query findChats($id:String){\r\n        ChatFind(query: $id){\r\n          _id createdAt lastModified title members {_id login} owner {_id login} messages {_id createdAt}\r\n        }\r\n      }`, {ChatFind: '', \r\n      id: JSON.stringify([\r\n        {\"members._id\": yield select((state) => state.auth.payload.sub.id), title: `/${text}/`},\r\n        {sort: [{lastModified: -1}]}\r\n        ])\r\n}) \r\n    yield put(setChatsAC(payload)) \r\n}\r\n\r\nexport function* searchChatsCheck() {\r\n    yield takeLatest('SEARCH_CHATS', searchChatsWorker)\r\n}\r\n\r\nexport const actionSearchUsers = text => ({type: 'SEARCH_USERS', text})\r\n\r\nfunction* searchUsersWorker({text}){\r\n    yield put(setUsersAC(null))\r\n    yield delay(1500) \r\n    let payload = yield chatGQL(`query findUsers($query:String){\r\n      UserFind(query: $query){\r\n        _id login nick avatar {\r\n          _id url\r\n        }\r\n      }\r\n    }`, {UserFind: '', \r\n      query: JSON.stringify([\r\n        {login: `/${text}/`}\r\n        ])\r\n}) \r\n    yield put(setUsersAC(payload)) \r\n}\r\n\r\nexport function* searchUsersCheck() {\r\n    yield takeLatest('SEARCH_USERS', searchUsersWorker)\r\n}","import { Box, List, TextField } from '@mui/material';\r\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../common/Search';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport styles from './new-chat-styles'\r\nimport { connect } from 'react-redux';\r\nimport { loadMoreUsersTHC, setTotalUsersCountTHC, setUsersSkipAC, setUsersTHC } from '../../../redux/reducers/usersReducer';\r\nimport User from './User';\r\nimport { actionSearchUsers } from '../../../redux/saga/searchSaga';\r\n\r\nconst NewChatDialogContent = ({users, usersSkip, totalUsersCount, setUsers, searchUsers, loadUsers, setTotalUsers, ...props}) => {\r\n    const [searchRequest, setSearchRequest] = useState('')\r\n    const handleChange = (e) => {\r\n        setSearchRequest(e.target.value)\r\n        searchUsers(e.target.value)\r\n    }\r\n\r\n    const listInnerRef = useRef()\r\n    const onScroll = () => {\r\n        // console.log('scrollHeight: ', listInnerRef.current.scrollHeight, 'top: ', listInnerRef.current.scrollTop, 'client: ', listInnerRef.current.clientHeight )\r\n        if (listInnerRef.current) {\r\n            const {scrollTop, scrollHeight, clientHeight} = listInnerRef.current\r\n            if (scrollTop + clientHeight > (scrollHeight - 1) && searchRequest.length <= 0) {\r\n                console.log('scrolled to bottom')\r\n                if (users.length < totalUsersCount) {\r\n                    loadUsers(usersSkip)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTotalUsers()\r\n        setUsers(0)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <TextField id=\"chat-name\" label=\"Chat Title\" variant=\"outlined\" sx={{mb: 2, width: '100%'}} value={props.title} onChange={(e) => props.setTitle(e.target.value)} />\r\n            <Search sx={{ mb: 1, mr: 0 }}>\r\n                <SearchIconWrapper>\r\n                    <SearchIcon />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                    placeholder=\"Search users…\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    value={searchRequest}\r\n                    onChange={handleChange}\r\n                />\r\n            </Search>\r\n            <Box sx={styles.usersListContainer} onScroll={() => onScroll()} ref={listInnerRef}>\r\n                <List disablePadding sx={{mb: 0}}>\r\n                    {users?.filter((user) => !!user.login)\r\n                    .map((user) => <User key={user._id} selectedIndex={props.memberId} handleListItemClick={(index) => props.setMemberId(index)} {...user}/>)}\r\n                </List>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users.users,\r\n    usersSkip: state.users.usersSkip,\r\n    totalUsersCount: state.users.totalUsersCount\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUsers: setUsersTHC, searchUsers: actionSearchUsers, loadUsers: loadMoreUsersTHC, setTotalUsers: setTotalUsersCountTHC})(NewChatDialogContent);","import DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Box, DialogActions, Divider, IconButton} from '@mui/material';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { promiseNewChatTHC } from '../../../redux/queries/queries';\r\nimport { useHistory } from 'react-router';\r\nimport { setChatsTHC, setChatTHC } from '../../../redux/reducers/chatsReducer';\r\nimport NewChatDialogContent from './NewChatDialogContent';\r\n\r\nconst NewChatDialog = (props) => {\r\n    const { onClose, open } = props\r\n\r\n    const [title, setTitle] = useState('my new chat')\r\n    const [memberId, setMemberId] = useState('')\r\n    let history = useHistory()\r\n\r\n    const handleCloseClick = () => {\r\n        onClose()\r\n        setTitle('my new chat')\r\n        setMemberId('')\r\n    }\r\n\r\n    const handleDoneClick = async () => {\r\n        let result = await props.createNewChat(title, memberId)\r\n\r\n        if (result._id) {\r\n            onClose()\r\n            setTitle('my new chat')\r\n            setMemberId('')\r\n\r\n            props.setChats(props.myId)\r\n            props.setChat(result._id)\r\n\r\n            history.push('/main/dialog/' + result._id)\r\n        }\r\n    }\r\n    return (\r\n        <Dialog onClose={handleCloseClick} open={open} maxWidth=\"xs\" fullWidth>\r\n            <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <DialogTitle>\r\n                    New Chat\r\n                </DialogTitle>\r\n                <IconButton sx={{ mr: 1 }} onClick={handleCloseClick}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </Box>\r\n            <Divider />\r\n            <DialogContent>\r\n                <NewChatDialogContent title={title} memberId={memberId} setTitle={setTitle} setMemberId={setMemberId} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <IconButton onClick={handleDoneClick} disabled={title.length <= 0 || memberId.length <= 0}>\r\n                    <DoneIcon />\r\n                </IconButton>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    myId: state.auth.payload.sub.id\r\n})\r\n\r\nexport default connect(mapStateToProps, {createNewChat: promiseNewChatTHC, setChats: setChatsTHC, setChat: setChatTHC})(NewChatDialog);","export const refactorTime = (timestamp) => {\r\n    let date = new Date(+timestamp)\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    let month = date.getMonth()\r\n    let day = date.getDate()\r\n    let hours = date.getHours()\r\n    let minutes = date.getMinutes()\r\n\r\n    let dayNow = new Date().getDate()\r\n     return dayNow === day ?\r\n     `${hours.toString().length < 2 ? '0' + hours : hours}:${minutes.toString().length < 2 ? '0' + minutes : minutes}` :\r\n     `${day} ${months[month]} ${hours.toString().length < 2 ? '0' + hours : hours}:${minutes.toString().length < 2 ? '0' + minutes : minutes}`\r\n}","import { Typography } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { connect } from 'react-redux';\r\nimport { promiseUploadFile } from '../../redux/queries/queries';\r\nimport { setAvatarTHC } from '../../redux/reducers/usersReducer';\r\n\r\nconst Dropzone = ({handleDrop, myId}) => {\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        console.log(acceptedFiles)\r\n        handleDrop(acceptedFiles[0], myId)\r\n      }, [])\r\n      const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n    \r\n      return (\r\n        <div {...getRootProps()} style={{cursor: 'pointer'}}>\r\n          <input {...getInputProps()} />\r\n          {\r\n            isDragActive ?\r\n              <Typography variant=\"body2\">Drop the image here ...</Typography> :\r\n              <Typography variant=\"body2\">Drag 'n' drop an image here, or click to select an image</Typography>\r\n          }\r\n        </div>\r\n      )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    myId: state.auth.payload.sub.id\r\n})\r\n\r\nexport default connect(mapStateToProps, {handleDrop: setAvatarTHC})(Dropzone);","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMyProfileTHC } from \"../../../redux/reducers/usersReducer\";\r\nimport { Box, Chip, Typography, Accordion, AccordionSummary, AccordionDetails, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\r\nimport { refactorTime } from '../../../helpers/refactorTime';\r\nimport Dropzone from \"../../common/Dropzone\";\r\n\r\nconst MyProfileDialogContent = ({ myProfile, myId, setMyProfile }) => {\r\n    useEffect(() => {\r\n        setMyProfile(myId)\r\n    }, [])\r\n    console.log(myProfile)\r\n    return (\r\n        <Box>\r\n            <Box sx={{ height: '250px',  display: 'flex', justifyContent: 'center', alignItems: 'center', overflow: 'hidden', mb: 1 }}>\r\n                {myProfile?.avatar ?\r\n                    <img src={'http://chat.fs.a-level.com.ua/' + myProfile.avatar.url} height='100%' /> :\r\n                    <Chip label=\"No avatar\" variant=\"filled\" />}\r\n            </Box>\r\n            <Box>\r\n                <Accordion disableGutters square>\r\n                    <AccordionSummary\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                        sx={{py: 0}}\r\n                    >\r\n                        <InsertPhotoIcon fontSize=\"large\" sx={{mr: 2.5}} />\r\n                        <Typography sx={{lineHeight: 2.3}}>Set Avatar</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Dropzone />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n            <Box>\r\n                <List sx={{pl: 2}}>\r\n                    <ListItem disablePadding>\r\n                        <ListItemIcon><AccountCircleIcon fontSize=\"large\" /></ListItemIcon>\r\n                        <ListItemText>\r\n                            <Typography variant=\"caption\">\r\n                                Login\r\n                            </Typography>\r\n                            <Typography>\r\n                            {myProfile?.login}\r\n                            </Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <ListItem disablePadding>\r\n                        <ListItemIcon><CalendarTodayIcon fontSize=\"large\" /></ListItemIcon>\r\n                        <ListItemText>\r\n                            <Typography variant=\"caption\">\r\n                                Profile created\r\n                            </Typography>\r\n                            <Typography>\r\n                            {refactorTime(myProfile?.createdAt)}\r\n                            </Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    myProfile: state.users.myProfile,\r\n    myId: state.auth.payload.sub.id\r\n})\r\n\r\nexport default connect(mapStateToProps, { setMyProfile: setMyProfileTHC })(MyProfileDialogContent);\r\n","import DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Box, DialogActions, Divider, IconButton} from '@mui/material';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MyProfileDialogContent from './MyProfileDialogContent';\r\n\r\nconst MyProfileDialog = ({onClose, open}) => {\r\n    const handleCloseClick = () => {\r\n        onClose()\r\n    }\r\n    const handleDoneClick = () => {\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleCloseClick} open={open} maxWidth=\"xs\" fullWidth>\r\n            <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <DialogTitle>\r\n                    My Profile\r\n                </DialogTitle>\r\n                <IconButton sx={{ mr: 1 }} onClick={handleCloseClick}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </Box>\r\n            <Divider />\r\n            <DialogContent>\r\n                <MyProfileDialogContent />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <IconButton onClick={handleDoneClick}>\r\n                    <DoneIcon />\r\n                </IconButton>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default MyProfileDialog;","import Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { ListItemText, ListItemIcon, Switch } from '@mui/material';\r\nimport { connect } from 'react-redux';\r\nimport { setDarkModeAC } from '../../../../redux/reducers/modeReducer';\r\nimport { logoutTHC } from '../../../../redux/reducers/authReducer';\r\nimport { useHistory } from 'react-router';\r\nimport { useState } from 'react';\r\nimport NewChatDialog from '../../../Dialogs/NewChatDialog/NewChatDialog';\r\nimport MyProfileDialog from '../../../Dialogs/MyProfileDialog/MyProfileDialog';\r\n\r\nconst MainMenu = ({ open, anchorEl, handleClose, isDarkMode, setMode, logout }) => {\r\n    let history = useHistory()\r\n    function logoutRedirect() {\r\n        logout()\r\n        history.push('/')\r\n    }\r\n\r\n    const [openNewChatDialog, setOpenNewChatDialog] = useState(false)\r\n\r\n    const handleClickOpenNewChatDialog = () => {\r\n        handleClose()\r\n        setOpenNewChatDialog(true)\r\n    };\r\n    const handleCloseNewChatDialog = () => {\r\n        setOpenNewChatDialog(false)\r\n    };\r\n\r\n    const [openMyProfileDialog, setOpenMyProfileDialog] = useState(false)\r\n\r\n    const handleClickOpenMyProfileDialog = () => {\r\n        handleClose()\r\n        setOpenMyProfileDialog(true)\r\n    };\r\n    const handleCloseMyProfileDialog = () => {\r\n        setOpenMyProfileDialog(false)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem onClick={handleClickOpenNewChatDialog}>\r\n                    <ListItemIcon>\r\n                        <ChatBubbleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>New Chat</ListItemText>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClickOpenMyProfileDialog}>\r\n                    <ListItemIcon>\r\n                        <AccountCircleIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>My Profile</ListItemText>\r\n                </MenuItem>\r\n                <MenuItem onClick={() => setMode(!isDarkMode)}>\r\n                    <ListItemIcon>\r\n                        <DarkModeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText sx={{ mr: 1 }}>Dark Mode</ListItemText>\r\n                    <Switch size=\"small\"\r\n                        checked={isDarkMode}\r\n                    />\r\n                </MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    handleClose()\r\n                    logoutRedirect()\r\n\r\n                }}>\r\n                    <ListItemIcon>\r\n                        <LogoutIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Log Out</ListItemText>\r\n                </MenuItem>\r\n            </Menu>\r\n            <NewChatDialog onClose={handleCloseNewChatDialog} open={openNewChatDialog} />\r\n            <MyProfileDialog onClose={handleCloseMyProfileDialog} open={openMyProfileDialog} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isDarkMode: state.mode.isDarkMode\r\n})\r\n\r\nexport default connect(mapStateToProps, { setMode: setDarkModeAC, logout: logoutTHC })(MainMenu);","import { AppBar, Toolbar, IconButton } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../../common/Search';\r\nimport { useState } from 'react';\r\nimport MainMenu from './MainMenu';\r\nimport { connect } from 'react-redux';\r\nimport { actionSearchChats } from '../../../../redux/saga/searchSaga';\r\n\r\nconst DialogsHeader = ({searchChats}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [searchRequest, setSearchRequest] = useState('')\r\n    const handleChange = (e) => {\r\n        setSearchRequest(e.target.value)\r\n        searchChats(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}\r\n                    onClick={handleClick}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <MainMenu open={open} anchorEl={anchorEl} handleClose={handleClose} />\r\n                <Search>\r\n                    <SearchIconWrapper>\r\n                        <SearchIcon />\r\n                    </SearchIconWrapper>\r\n                    <StyledInputBase\r\n                        placeholder=\"Search…\"\r\n                        inputProps={{ 'aria-label': 'search' }}\r\n                        value={searchRequest}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Search>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default connect(null, {searchChats: actionSearchChats})(DialogsHeader);","const styles = {\r\n    dialogsListContainer: {\r\n        maxHeight: '88vh',\r\n        overflowY: 'auto',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.3em'\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n            webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(255,255,255,.1)',\r\n          }\r\n    },\r\n    dialogItemContainer: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    dialogItemInfoContainer: {\r\n        width: '100%'\r\n    },\r\n    dialogItemInfo: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    messageWrapper: {\r\n        maxWidth: '160px',\r\n        overflow: 'hidden'\r\n    },\r\n    message: {\r\n        color: 'text.secondary',\r\n    }\r\n}\r\n\r\nexport default styles;","import { Typography, Box, Avatar, Badge, ListItemButton } from '@mui/material';\r\nimport { stringAvatar } from '../../../../helpers/stringToAvatarColor'\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './dialogs-list-styles';\r\nimport { refactorTime } from '../../../../helpers/refactorTime';\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { promiseGetChatMessagesTHC } from '../../../../redux/queries/queries';\r\n\r\nconst Dialog = ({chat: {lastModified, ...chat}, setMessages, ...props}) => {\r\n    const [lastMessage, setLastMessage] = useState('')\r\n\r\n    useEffect(async () => {\r\n        const messagesResult = await setMessages(chat._id)\r\n        setLastMessage(messagesResult[messagesResult.length-1]?.text)\r\n    }, [lastModified])\r\n\r\n    return (\r\n        <ListItemButton\r\n            component={Link}\r\n            to={'/main/dialog/' + chat._id}\r\n            divider\r\n            selected={props.selectedIndex === chat._id}\r\n            onClick={() => props.handleListItemClick(chat._id)}>\r\n            <Box sx={styles.dialogItemContainer}>\r\n                <Avatar {...stringAvatar(chat.title)} />\r\n                <Box sx={styles.dialogItemInfoContainer}>\r\n                    <Box sx={styles.dialogItemInfo}>\r\n                        <Typography component=\"span\" noWrap gutterBottom sx={styles.messageWrapper}>{chat.title}</Typography>\r\n                        <Typography component=\"span\" variant=\"caption\">\r\n                            {refactorTime(lastModified)}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box sx={styles.dialogItemInfo}>\r\n                        <Box sx={styles.messageWrapper}>\r\n                            <Typography variant=\"body2\" noWrap sx={styles.message}>{chat.messages ? \r\n                            lastMessage : 'No messages here yet...'}</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <Badge badgeContent={chat.messages && chat.messages.length} color=\"primary\" sx={{ mr: 2, mb: 0.8 }}></Badge>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </ListItemButton>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {setMessages: promiseGetChatMessagesTHC})(Dialog);\r\n","import { List, Box} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from './dialogs-list-styles';\r\nimport { connect } from 'react-redux';\r\nimport { setChatsTHC } from '../../../../redux/reducers/chatsReducer';\r\nimport Dialog from './Dialog';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst DialogsList = ({currentChat, ...props}) => {\r\n    const history = useHistory()\r\n    const [selectedIndex, setSelectedIndex] = useState(currentChat ? currentChat._id : \r\n        history.location.pathname.slice(13).length > 0 ? history.location.pathname.slice(13) : '')\r\n\r\n    const handleListItemClick = (index) => {\r\n        setSelectedIndex(index);\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.setChats(props.myId)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        currentChat && setSelectedIndex(currentChat._id)\r\n    }, [currentChat])\r\n\r\n    return (\r\n        <Box sx={styles.dialogsListContainer}>\r\n            <List disablePadding>\r\n                {props.chats?.map((chat) => <Dialog key={chat._id} selectedIndex={selectedIndex}\r\n                    handleListItemClick={handleListItemClick}\r\n                    chat={chat}\r\n                />)}\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    chats: state.chats.chats,\r\n    myId: state.auth.payload.sub.id,\r\n    currentChat: state.chats.currentChat\r\n})\r\n\r\nexport default connect(mapStateToProps, { setChats: setChatsTHC })(DialogsList);","import { Grid } from \"@mui/material\";\r\nimport DialogsHeader from \"./DialogsHeader/DialogsHeader\";\r\nimport DialogsList from \"./DialogsList/DialogsList\";\r\n\r\nconst DialogsWindow = () => {\r\n    return (\r\n        <Grid item xs={12} md={3.5}>\r\n            <DialogsHeader />\r\n            <DialogsList />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DialogsWindow;","import { Box, Typography } from '@mui/material';\r\n\r\n\r\nconst ChatTitle = ({ currentChat }) => {\r\n    console.log(currentChat)\r\n    return (\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Box>\r\n                <Typography>{currentChat && currentChat.title}</Typography>\r\n                <Typography variant=\"caption\" gutterBottom>\r\n                    members: {currentChat && currentChat.members.length}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChatTitle;","import Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { ListItemText, ListItemIcon, Switch } from '@mui/material';\r\nimport { connect } from 'react-redux';\r\nimport { setDarkModeAC } from '../../../../redux/reducers/modeReducer';\r\nimport { logoutTHC } from '../../../../redux/reducers/authReducer';\r\nimport { useHistory } from 'react-router';\r\nimport { useState } from 'react';\r\nimport NewChatDialog from '../../../Dialogs/NewChatDialog/NewChatDialog';\r\nimport MyProfileDialog from '../../../Dialogs/MyProfileDialog/MyProfileDialog';\r\n\r\nconst ChatMenu = ({open, anchorEl, handleClose}) => {\r\n    // let history = useHistory()\r\n    // function logoutRedirect() {\r\n    //     logout()\r\n    //     history.push('/')\r\n    // }\r\n\r\n    // const [openNewChatDialog, setOpenNewChatDialog] = useState(false)\r\n\r\n    // const handleClickOpenNewChatDialog = () => {\r\n    //     handleClose()\r\n    //     setOpenNewChatDialog(true)\r\n    // };\r\n    // const handleCloseNewChatDialog = () => {\r\n    //     setOpenNewChatDialog(false)\r\n    // };\r\n\r\n    // const [openMyProfileDialog, setOpenMyProfileDialog] = useState(false)\r\n\r\n    // const handleClickOpenMyProfileDialog = () => {\r\n    //     handleClose()\r\n    //     setOpenMyProfileDialog(true)\r\n    // };\r\n    // const handleCloseMyProfileDialog = () => {\r\n    //     setOpenMyProfileDialog(false)\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                  }}\r\n                  transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                  }}\r\n            >\r\n                <MenuItem onClick={() => {\r\n                    handleClose()\r\n\r\n                }}>\r\n                    <ListItemIcon>\r\n                        <LogoutIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Log Out</ListItemText>\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatMenu;","import { AppBar, Toolbar, IconButton, Box } from '@mui/material';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport ChatTitle from './ChatTitle';\r\nimport { useState } from 'react';\r\nimport ChatMenu from './ChatMenu';\r\n\r\nconst MessagesHeader = ({currentChat}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Box sx={{width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n                    <ChatTitle currentChat={currentChat} />\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ ml: 2 }} onClick={handleClick}>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    <ChatMenu open={open} anchorEl={anchorEl} handleClose={handleClose} />\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default MessagesHeader;","const styles = {\r\n    messageWindowMessagesContainer: {\r\n        flexGrow: 2,\r\n        height: '500px',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column-reverse',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em'\r\n          },\r\n          '&::-webkit-scrollbar-track': {\r\n            boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n            webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n          },\r\n          '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgba(255,255,255,.3)',\r\n          }\r\n    },\r\n    messageYou: {\r\n        justifyContent: 'flex-end',\r\n        py: 0.5\r\n    },\r\n    messageCompanion: {\r\n        justifyContent: 'flex-start',\r\n        py: 0.5\r\n    },\r\n    messageBubbleYou: {\r\n        maxWidth: '60%',\r\n        px: 1.3,\r\n        py: 1,\r\n        pb: 0.3,\r\n        bgcolor: 'background.messageColor',\r\n        borderTopLeftRadius: 13,\r\n        borderTopRightRadius: 13,\r\n        borderBottomLeftRadius: 13,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    messageBubbleCompanion: {\r\n        maxWidth: '60%',\r\n        px: 1.3,\r\n        py: 1,\r\n        pb: 0.3,\r\n        bgcolor: 'background.messageDark',\r\n        borderTopLeftRadius: 13,\r\n        borderTopRightRadius: 13,\r\n        borderBottomRightRadius: 13,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    dateCaption: {\r\n        fontSize: '11px',\r\n        fontWeight: 'light',\r\n        alignSelf: 'flex-end'\r\n    },\r\n    messageInputCont: {\r\n        display: 'flex',\r\n        pt: 2\r\n    },\r\n    sendIcon: {\r\n        ml: 2,\r\n        mr: 2\r\n    },\r\n    attachIcon: {\r\n        ml: 2\r\n    },\r\n    messageInput: {\r\n        ml: 1\r\n    }\r\n}\r\n\r\nexport default styles;","export default __webpack_public_path__ + \"static/media/back_satan.22933c5e.jpg\";","export default __webpack_public_path__ + \"static/media/back_dooml.539326cb.jpg\";","import { IconButton, TextField, List, ListItem, Typography, Box, Chip } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport styles from './messages-list-styles';\r\nimport imageDark from '../../../../images/back_satan.jpg';\r\nimport imageDoom from '../../../../images/back_dooml.jpg';\r\nimport { connect } from 'react-redux';\r\nimport { refactorTime } from '../../../../helpers/refactorTime';\r\nimport { setMessagesTHC } from '../../../../redux/reducers/messagesReducer';\r\nimport { promiseNewMessageTHC } from '../../../../redux/queries/queries';\r\nimport { useState } from 'react';\r\nimport { setChatsTHC } from '../../../../redux/reducers/chatsReducer';\r\n\r\nconst Message = ({ message, myId }) => {\r\n    return (\r\n        <ListItem sx={myId === message.owner._id ?\r\n            styles.messageYou :\r\n            styles.messageCompanion}>\r\n            <Box sx={myId === message.owner._id ?\r\n                styles.messageBubbleYou :\r\n                styles.messageBubbleCompanion}>\r\n                <Typography variant=\"body2\">{message.text}</Typography>\r\n                <Typography component=\"span\" sx={styles.dateCaption}>{refactorTime(message.createdAt)}</Typography>\r\n            </Box>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst MessagesList = ({ isDarkMode, myId, messages, setMessages, addMessage, chatId, setChats }) => {\r\n    const [messageText, setMessageText] = useState('')\r\n\r\n    const handleSendClick = async () => {\r\n        if (messageText.length > 0 && messageText) {\r\n            let result = await addMessage(messageText, chatId)\r\n            \r\n            if (result?._id) {\r\n                setMessages(chatId)\r\n                setMessageText('')\r\n                setChats(myId)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ ...styles.messageWindowMessagesContainer, backgroundImage: `url(${isDarkMode ? imageDark : imageDoom})`, }}>\r\n                <List>\r\n                    {messages?.length > 0 ?\r\n                        messages.map((message) => <Message message={message} myId={myId} key={message._id} />) :\r\n                        <div style={{ textAlign: 'center', marginBottom: '10px' }}><Chip label=\"No messages here :(\" variant=\"filled\" sx={{ color: '#fff' }} /></div>}\r\n                </List>\r\n            </Box>\r\n\r\n            <Box sx={styles.messageInputCont}>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={styles.attachIcon}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <TextField\r\n                    value={messageText}\r\n                    onChange={(e) => setMessageText(e.target.value)}\r\n                    id=\"standard-textarea\"\r\n                    placeholder=\"Write your message...\"\r\n                    multiline\r\n                    variant=\"standard\"\r\n                    maxRows={6}\r\n                    fullWidth\r\n                    sx={styles.messageInput}\r\n                />\r\n                <IconButton onClick={handleSendClick} edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={styles.sendIcon}>\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isDarkMode: state.mode.isDarkMode\r\n})\r\n\r\nexport default connect(mapStateToProps, { addMessage: promiseNewMessageTHC, setMessages: setMessagesTHC, setChats: setChatsTHC })(MessagesList);","import { Grid } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setChatTHC } from '../../../redux/reducers/chatsReducer';\r\nimport { setMessagesTHC } from '../../../redux/reducers/messagesReducer';\r\nimport MessagesHeader from './MessagesHeader/MessagesHeader';\r\nimport MessagesList from './MessagesList/MessagesList';\r\n\r\nconst MessagesWindow = ({match: {params: {id}}, setChat, myId, currentChat, setMessages, messages}) => {\r\n    useEffect(() => {\r\n        setChat(id) \r\n        setMessages(id)\r\n    }, [id])\r\n    return (\r\n        <Grid item xs={12} md={8.5} sx={{display: 'flex', flexDirection: 'column'}}>\r\n            <MessagesHeader currentChat={currentChat} />\r\n            <MessagesList myId={myId} messages={messages} chatId={id} />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    myId: state.auth.payload.sub.id,\r\n    currentChat: state.chats.currentChat,\r\n    messages: state.messages.messages\r\n})\r\n\r\nexport default connect(mapStateToProps, {setChat: setChatTHC, setMessages: setMessagesTHC})(MessagesWindow);","const styles = {\r\n    placeholderContainer: {\r\n        height: '102%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat'\r\n    }\r\n}\r\n\r\nexport default styles;","import styles from './placeholder-styles.js';\r\nimport { Box, Chip, Grid } from '@mui/material';\r\nimport imageDark from '../../../images/back_satan.jpg';\r\nimport imageDoom from '../../../images/back_dooml.jpg';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Placeholder = ({isDarkMode}) => {\r\n    return (\r\n        <Grid item xs={12} md={8.5}>\r\n            <Box sx={{...styles.placeholderContainer, backgroundImage: `url(${isDarkMode ? imageDark : imageDoom})`,}}> \r\n            <Chip label=\"Select a chat to start messaging...\" variant=\"filled\" sx={{color: '#fff'}} />\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isDarkMode: state.mode.isDarkMode\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Placeholder);","import { Container, Grid, createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\nimport styles from './main-styles';\r\nimport { Route } from 'react-router-dom';\r\nimport DialogsWindow from './DialogsWindow/DialogsWindow';\r\nimport MessagesWindow from './MessagesWindow/MessagesWindow';\r\nimport Placeholder from './Placeholder/Placeholder';\r\nimport {connect} from 'react-redux';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      background: {\r\n          messageDark: '#272727',\r\n          messageColor: '#2e72c6'\r\n      }\r\n    }\r\n  });\r\n\r\nconst lightTheme = createTheme({\r\n    palette: {\r\n      mode: 'light',\r\n      background: {\r\n        messageDark: '#fff',\r\n        messageColor: '#bddeff'\r\n    }\r\n    },\r\n  });\r\n\r\nconst Main = ({isDarkMode}) => {\r\n    return (\r\n        <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n            <CssBaseline />\r\n            <Container disableGutters sx={styles.container}>\r\n                <Grid sx={styles.gridContainer} container>\r\n                    <DialogsWindow />\r\n                    <Route path=\"/main\" exact component={Placeholder} />\r\n                    <Route path=\"/main/dialog/:id\" component={MessagesWindow} />\r\n                </Grid>\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isDarkMode: state.mode.isDarkMode\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Main);","import Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loginTHC } from '../../redux/reducers/authReducer';\r\n\r\nconst Login = ({onLogin}) => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={e => e.preventDefault()} sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"login\"\r\n              label=\"Login\"\r\n              name=\"login\"\r\n              autoComplete=\"login\"\r\n              autoFocus\r\n              value={login}\r\n              onChange={(e) => setLogin(e.target.value)}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={() => onLogin(login, password)}\r\n            >\r\n              Log In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n              <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default connect(null, {onLogin: loginTHC})(Login)","import Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { registerTHC } from '../../redux/reducers/authReducer';\r\n\r\nconst SignUp = ({onSignUp}) => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [verifiedPassword, setVerifiedPassword] = useState('')\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={e => e.preventDefault()} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"login\"\r\n                  label=\"Login\"\r\n                  name=\"login\"\r\n                  autoFocus\r\n                  value={login}\r\n                  onChange={(e) => setLogin(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"passwordVerify\"\r\n                  label=\"Verify Password\"\r\n                  type=\"password\"\r\n                  id=\"passwordVerify\"\r\n                  helperText=\"Passwords must match.\"\r\n                  value={verifiedPassword}\r\n                  onChange={(e) => setVerifiedPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={password !== verifiedPassword}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={() => onSignUp(login, password)}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/\" variant=\"body2\">\r\n                  Already have an account? Log in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default connect(null, {onSignUp: registerTHC})(SignUp);","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { authReducer } from './reducers/authReducer';\r\nimport { chatsReducer } from './reducers/chatsReducer';\r\nimport { messagesReducer } from './reducers/messagesReducer';\r\nimport { modeReducer } from './reducers/modeReducer';\r\nimport { promiseReducer } from './reducers/promiseReducer';\r\nimport { usersReducer } from './reducers/usersReducer';\r\nimport { all } from 'redux-saga/effects';\r\nimport { searchChatsCheck, searchUsersCheck} from './saga/searchSaga';\r\n\r\nconst reducers = combineReducers({\r\n    promise: promiseReducer,\r\n    auth: authReducer,\r\n    mode: modeReducer,\r\n    users: usersReducer,\r\n    chats: chatsReducer,\r\n    messages: messagesReducer\r\n})\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middlewares = [thunkMiddleware, sagaMiddleware]\r\n\r\nexport const store = createStore(reducers, applyMiddleware(...middlewares))\r\n\r\nstore.subscribe(() => console.log(store.getState()))\r\n\r\nfunction* rootSaga(){\r\n    yield all([\r\n        searchChatsCheck(),\r\n        searchUsersCheck()\r\n    ])\r\n}\r\n\r\nsagaMiddleware.run(rootSaga)\r\n","import './App.css';\nimport Main from './components/Main/Main';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Router, Route } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport Login from './components/Login/Login';\nimport SignUp from './components/SignUp/SignUp';\nimport { Redirect } from 'react-router';\nimport { connect, Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nfunction App({ isLoggedIn }) {\n  return (\n    <>\n      <CssBaseline />\n        {isLoggedIn && <Route exact path=\"/\" render={() => <Redirect to=\"/main\"/>} />}\n\n        <Route path=\"/main\" component={Main} />\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/signup\" component={SignUp} />\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn\n})\n\nconst AppContainer = connect(mapStateToProps, null)(App);\n\nfunction mainApp() {\n  return (\n    <Provider store={store}>\n      <Router history={createHistory()}>\n        <AppContainer />\n      </Router>\n    </Provider>\n  )\n}\n\nexport default mainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}